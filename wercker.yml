# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
dev:
 steps:
  - setup-go-workspace:
    package-dir: github.com/tan00/golang_design_pattern

  - script:
      name: env
      code: env
  - script:
    name: got get 
    code: |           
            cd $WERCKER_SOURCE_DIR
            go version 
            export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
            #curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh 
            #echo "gopath  =  $GOPATH"           
            #$HOME/go/bin/dep  init
            #$HOME/go/bin/dep  ensure


  - internal/watch:
    code: go run main.go
    reload: true     

build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace:
       package-dir: github.com/tan00/golang_design_pattern


    # Gets the dependencies
    - script:
        name: install dependencies
        code: |
          #dep init
          #dep ensure
          #go get -u github.com/tan00/golang_design_pattern/pattern

    # Build the project
    - script:
        name: go build
        code: |
          go build 

    # Test the project
    - script:
        name: go test
        code: |
          go test -v
    - script:
        name: copy to wercker output
        code: |
          #cp -R ./  $(WERCKER_OUTPUT_DIR)

deploy:
  steps:
    - script:
        name: echo env
        code: |
          echo $DOCKER_PASSWORD $DOCKER_USERNAME
    - internal/docker-push:
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      cmd: /pipeline/source/golang_design_pattern
      port: ""
      tag: latest
      repository: tan00/wercker_test1
      registry: https://registry.hub.docker.com
      #registry: https://hub.docker.com

